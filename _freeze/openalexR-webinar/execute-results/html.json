{
  "hash": "99ba3ae891e73133b308fa69d2aaa7f9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to openalexR: a webinar\"\ndate: today\nauthor: Trang Le\nformat: \n  html:\n    toc: true\n    toc_float: true\n    resources:\n      - data/* \n# filters:\n#   - webr\n---\n\n\n\nWelcome to the webinar on **openalexR**!\nToday, we will explore how to use the **openalexR** package to fetch data from OpenAlex, a free, comprehensive database for scholarly papers, authors, institutions, and more.\n\n## Agenda\n\n1.  Introduction to **openalexR**\n2.  Installation and setup\n3.  Basic usage\n4.  Advanced usage\n5.  Data visualization\n6.  Q&A and interactive challenges\n\n## 1. Introduction\n\n**openalexR** is an R package that provides an interface to OpenAlex, a free and open dataset of the entire research landscape.\nWith **openalexR**, you can easily access and analyze scholarly data directly from R.\n\n## 2. Installation and Setup\n\nFirst, let's install and load the **openalexR** package.\nIf you haven't already installed it, you can do so from CRAN:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"openalexR\")\n```\n:::\n\n\n\nLoad the package:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openalexR)\n```\n:::\n\n\n\n## 3. Basic Usage\n\n### Fetching Information on a Specific Work\n\nLet's start by fetching data on a specific scholarly work using its OpenAlex ID:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwork_id <- \"W2741809807\"\nwork <- oa_fetch(entity = \"works\", id = work_id)\nprint(work)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 38\n  id                title display_name author ab    publication_date so    so_id\n  <chr>             <chr> <chr>        <list> <chr> <chr>            <chr> <chr>\n1 https://openalex… The … The state o… <df>   Desp… 2018-02-13       PeerJ http…\n# ℹ 30 more variables: host_organization <chr>, issn_l <chr>, url <chr>,\n#   pdf_url <chr>, license <chr>, version <chr>, first_page <chr>,\n#   last_page <chr>, volume <chr>, issue <lgl>, is_oa <lgl>,\n#   is_oa_anywhere <lgl>, oa_status <chr>, oa_url <chr>,\n#   any_repository_has_fulltext <lgl>, language <chr>, grants <lgl>,\n#   cited_by_count <int>, counts_by_year <list>, publication_year <int>,\n#   cited_by_api_url <chr>, ids <list>, doi <chr>, type <chr>, …\n```\n\n\n:::\n:::\n\n\n\n### Searching for Works\n\nYou can also search for works related to a specific topic.\nHere's an example fetching the first few works related to \"climate change\":\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquery <- \"climate change\"\nworks <- oa_fetch(entity = \"works\", search = query, options = list(sample = 10))\nprint(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 39\n   id     title display_name author ab    publication_date relevance_score so   \n   <chr>  <chr> <chr>        <list> <chr> <chr>                      <dbl> <chr>\n 1 https… Repl… Reply on RC3 <df>   \"<st… 2021-07-05                  1.00 <NA> \n 2 https… The … The State o… <df>   \"Tel… 2010-11-26                  1.00 Jour…\n 3 https… Expe… Experimenta… <df>   \"Bla… 2018-07-01                  1.00 Ener…\n 4 https… From… From extens… <df>   \"The… 2015-11-01                  1.00 Tect…\n 5 https… The … The link be… <df>   \"The… 2020-11-06                  1.00 <NA> \n 6 https… Turb… Turbulent b… <df>   \"Tur… 2015-08-25                  1.00 Viet…\n 7 https… Merg… Merging the… <df>   \"The… 2007-01-01                  1.00 Hort…\n 8 https… Pass… Passport In… <df>   \"M. … 2016-08-19                  1.00 Scie…\n 9 https… A St… A Study on … <df>   \"Our… 2019-04-13                  1.00 <NA> \n10 https… Re‐f… Re‐framing … <df>   \"Tho… 1996-01-01                  1.00 Worl…\n# ℹ 31 more variables: so_id <chr>, host_organization <chr>, issn_l <chr>,\n#   url <chr>, pdf_url <chr>, license <chr>, version <chr>, first_page <chr>,\n#   last_page <chr>, volume <chr>, issue <chr>, is_oa <lgl>,\n#   is_oa_anywhere <lgl>, oa_status <chr>, oa_url <chr>,\n#   any_repository_has_fulltext <lgl>, language <chr>, grants <list>,\n#   cited_by_count <int>, counts_by_year <list>, publication_year <int>,\n#   cited_by_api_url <chr>, ids <list>, doi <chr>, type <chr>, …\n```\n\n\n:::\n:::\n\n\n\n## 4. Advanced Usage\n\n### Fetching Author Information\n\nTo fetch information about a specific author, use their OpenAlex ID:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauthor <- oa_fetch(entity = \"authors\", display_name.search = \"Eugen Lounkine\", verbose = T)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRequesting url: https://api.openalex.org/authors?filter=display_name.search%3AEugen%20Lounkine\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting 1 page of results with a total of 1 records...\n```\n\n\n:::\n\n```{.r .cell-code}\nauthor_id <- author$id[[1]]\nprint(author)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 18\n  id             display_name display_name_alterna…¹ relevance_score ids   orcid\n  <chr>          <chr>        <list>                           <dbl> <lis> <lgl>\n1 https://opena… Eugen Lounk… <chr [2]>                        5291. <chr> NA   \n# ℹ abbreviated name: ¹​display_name_alternatives\n# ℹ 12 more variables: works_count <int>, cited_by_count <int>,\n#   counts_by_year <list>, affiliation_display_name <chr>,\n#   affiliation_id <chr>, affiliation_ror <chr>,\n#   affiliation_country_code <chr>, affiliation_type <chr>,\n#   affiliation_lineage <chr>, affiliations_other <list>, x_concepts <list>,\n#   works_api_url <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\nknitr::knit_exit()\n```\n:::\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}